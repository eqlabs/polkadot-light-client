From fd29c98083d74355039fb66442c6e7dd5471966a Mon Sep 17 00:00:00 2001
From: Mariusz Pilarek <mariusz@eiger.co>
Date: Mon, 7 Nov 2022 15:34:05 +0100
Subject: [PATCH] Fixed compiler errors.

---
 src/passes/CoalesceLocals.cpp | 2 +-
 src/wasm-features.h           | 2 +-
 src/wasm-type.h               | 3 ---
 3 files changed, 2 insertions(+), 5 deletions(-)

diff --git a/src/passes/CoalesceLocals.cpp b/src/passes/CoalesceLocals.cpp
index ad64b066c..42d0e27c1 100644
--- a/src/passes/CoalesceLocals.cpp
+++ b/src/passes/CoalesceLocals.cpp
@@ -300,7 +300,7 @@ void CoalesceLocals::pickIndicesFromOrder(std::vector<Index>& order,
       // go in the order, we only need to update for those we will see later
       auto j = order[k];
       newInterferences[found * numLocals + j] =
-        newInterferences[found * numLocals + j] | interferes(actual, j);
+        newInterferences[found * numLocals + j] || interferes(actual, j);
       newCopies[found * numLocals + j] += getCopies(actual, j);
     }
   }
diff --git a/src/wasm-features.h b/src/wasm-features.h
index 237dc7757..1c9458e7c 100644
--- a/src/wasm-features.h
+++ b/src/wasm-features.h
@@ -95,7 +95,7 @@ struct FeatureSet {
   operator uint32_t() const { return features; }
 
   bool isMVP() const { return features == MVP; }
-  bool has(FeatureSet f) { return (features & f) == f; }
+  bool has(FeatureSet f) { return (features & f) == f.features; }
   bool hasAtomics() const { return (features & Atomics) != 0; }
   bool hasMutableGlobals() const { return (features & MutableGlobals) != 0; }
   bool hasTruncSat() const { return (features & TruncSat) != 0; }
diff --git a/src/wasm-type.h b/src/wasm-type.h
index 8c1d72085..799e14c58 100644
--- a/src/wasm-type.h
+++ b/src/wasm-type.h
@@ -361,9 +361,6 @@ struct Tuple {
   bool operator!=(const Tuple& other) const { return !(*this == other); }
   std::string toString() const;
 
-  // Prevent accidental copies
-  Tuple& operator=(const Tuple&) = delete;
-
 private:
   void validate() {
 #ifndef NDEBUG
-- 
2.32.1 (Apple Git-133)

